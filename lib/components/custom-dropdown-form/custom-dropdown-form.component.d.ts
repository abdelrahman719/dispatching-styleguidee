import { FormGroup } from '@angular/forms';
import { IComponentFormError, IDropdownOption } from '../../interfaces';
import * as i0 from "@angular/core";
export declare class CustomDropdownFormComponent {
    parentForm: FormGroup | any;
    controlName: string;
    label?: string;
    labelClass: string;
    dropdownOptionsClass: string;
    dropdownHeaderClass: string;
    dropdownContainerClass: string;
    placeholder: string;
    enableFilter: boolean;
    showClear: boolean;
    options: IDropdownOption[];
    name: string;
    validation: IComponentFormError[];
    isOpen: boolean;
    selectedOption: IDropdownOption | null;
    filteredOptions: IDropdownOption[];
    filterText: string;
    ngOnInit(): void;
    toggleDropdown(): void;
    selectOption(option: IDropdownOption): void;
    clearSelection(event: Event): void;
    filterOptions(): void;
    set reset(value: boolean);
    containRequiredError(): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<CustomDropdownFormComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<CustomDropdownFormComponent, "custom-dropdown-form", never, { "parentForm": { "alias": "parentForm"; "required": true; }; "controlName": { "alias": "controlName"; "required": true; }; "label": { "alias": "label"; "required": false; }; "labelClass": { "alias": "labelClass"; "required": false; }; "dropdownOptionsClass": { "alias": "dropdownOptionsClass"; "required": false; }; "dropdownHeaderClass": { "alias": "dropdownHeaderClass"; "required": false; }; "dropdownContainerClass": { "alias": "dropdownContainerClass"; "required": false; }; "placeholder": { "alias": "placeholder"; "required": false; }; "enableFilter": { "alias": "enableFilter"; "required": false; }; "showClear": { "alias": "showClear"; "required": false; }; "options": { "alias": "options"; "required": true; }; "name": { "alias": "name"; "required": true; }; "validation": { "alias": "validation"; "required": true; }; "reset": { "alias": "reset"; "required": false; }; }, {}, never, never, true, never>;
}
